# This file is a part of the ERC ResiBots project.
#
# This software is governed by the CeCILL license under French law and abiding by
# the rules of distribution of free software. You can use, modify and/ or redistribute
# the software under the terms of the CeCILL license as circulated by CEA, CNRS
# and INRIA at the following URL "http://www.cecill.info". As a counterpart to the
# access to the source code and rights to copy, modify and redistribute granted by
# the license, users are provided only with a limited warranty and the software's
# author, the holder of the economic rights, and the successive licensors have only
# limited liability. In this respect, the user's attention is drawn to the risks
# associated with loading, using, modifying and/or developing or reproducing the
# software by the user in light of its specific status of free software, that may
# mean that it is complicated to manipulate, and that also therefore means that it
# is reserved for developers and experienced professionals having in-depth computer
# knowledge. Users are therefore encouraged to load and test the software's
# suitability as regards their requirements in conditions enabling the security of
# their systems and/or data to be ensured and, more generally, to use and operate
# it in the same conditions as regards security. The fact that you are presently
# reading this means that you have had knowledge of the CeCILL license and that
# you accept its terms.


dynamixel_control:
  loop_frequency: 5
  cycle_time_error_threshold: 0.05
  serial_interface: /dev/ttyUSB0
  # Remember to change serial_interface when using with the motors
  baudrate: 1000000 # in bauds
  read_timeout: 0.02 # in seconds
  scan_timeout: 0.02
  default_command_interface: velocity
  # correspondance between hardware IDs of the actuators and their names in ROS
  servos:
    arm_0_1:
      id: 1
      offset: 3.14159265359
    arm_1_2:
      id: 2
      offset: 3.14159265359
    arm_2_3:
      id: 3
      offset: 3.14159265359
    arm_3_4:
      id: 4
      offset: 3.14159265359
    arm_4_5:
      id: 5
      offset: 3.14159265359


dynamixel_controllers:
  joint_state_controller:
    type: joint_state_controller/JointStateController
    publish_rate: 5

  omni_policy_controller:
    # type: omni_controllers/OmnigrasperUnsafePolicyController
    type: omni_controllers/OmnigrasperSmoothConstraintPolicyController
    # type: omni_controllers/OmnigrasperSpeedSafeController
    # type: omni_controllers/ArmSpeedUnsafeController

    # type: velocity_controllers/JointTrajectoryController
    # gains: # Required because we're controlling a velocity interface
    #   arm_0_1: {p: 1,  d: 0.1, i: 0.1, i_clamp: 1}
    #   arm_1_2: {p: 1,  d: 0.1, i: 0.1, i_clamp: 1}
    #   arm_2_3: {p: 1,  d: 0.1, i: 0.1, i_clamp: 1}
    #   arm_3_4: {p: 1,  d: 0.1, i: 0.1, i_clamp: 1}
    #   arm_4_5: {p: 1,  d: 0.1, i: 0.1, i_clamp: 1}
    joints:
      - arm_0_1
      - arm_1_2
      - arm_2_3
      - arm_3_4
      - arm_4_5
    min_heights:
      - # height limit to protect the arm and the mobile base from each other
        # x_min: -0.145
        # y_min: -0.20
        # x_max: 0.455
        # y_max: 0.20
        hard_min_height: 0.1
        soft_min_height: 0.15
    policy_params:
      state_dim: 5
      action_dim: 5
      hidden_neurons: 10
      limits: [3.14, 3.14, 3.14, 3.14, 3.14]
      max_u: [1.0, 1.0, 1.0, 1.0, 1.0]
